package com.greglturnquist.hackingspringboot.reactive;

import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;

import reactor.core.publisher.Mono;

@Service
public class CartService {
	
	private final ItemRepository itemRepository;
	private final CartRepository cartRepository;
	
	CartService(ItemRepository itemRepository, CartRepository cartRepository){
		this.itemRepository = itemRepository;
		this.cartRepository = cartRepository;
	}
	
	
//	장바구니에 상품 추가

	Mono<Cart> addToCart(String cartId, String id){
		return this.cartRepository.findById(cartId)//
				   .defaultIfEmpty(new Cart(cartId))
				   .flatMap(cart -> cart.getCartItems().stream()
						   .filter(cartItem -> cartItem.getItem()//
								   .getId().equals(id))//
						   .findAny()//
						   .map(cartItem -> {
							   cartItem.increment();
							   return Mono.just(cart);
						   }) //
						   .orElseGet(() -> //
							    this.itemRepository.findById(id)//
									 .map(CartItem::new)
									 .doOnNext(cartItem -> // 
										   cart.getCartItems().add(cartItem))//
									 .map(cartItem -> cart)))
				   .flatMap(this.cartRepository::save);
	}
}
