package com.greglturnquist.hackingspringboot.reactive;

import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;

import reactor.core.publisher.Mono;

@Service
public class CartService {
	
	private final ItemRepository itemRepository;
	private final CartRepository cartRepository;
	
	CartService(ItemRepository itemRepository, CartRepository cartRepository){
		this.itemRepository = itemRepository;
		this.cartRepository = cartRepository;
	}
	
	
//	장바구니에 상품 추가

	Mono<String> addToCart(String cartId, String id){
		return this.cartRepository.findById("My Cart")//
				   .defaultIfEmpty(new Cart("My Cart"))
				   .flatMap(cart -> cart.getCartItems().stream()
						   .filter(cartItem -> cartItem.getItem()//
								   .getId().equals(id))//
						   .findAny()
						   .map(cartItem -> {
							   cartItem.increment();
							   return Mono.just(cart);
						   })
						   .orElseGet(() -> {
							   return this.itemRepository.findById(id)//
									   .map(item -> new CartItem(item))
									   .map(cartItem -> {
										   cart.getCartItems().add(cartItem);
										   return cart;
									   });
						   }))
						   .flatMap(cart -> this.cartRepository.save(cart))
						   .thenReturn("redirect:/");
	}
	
}
