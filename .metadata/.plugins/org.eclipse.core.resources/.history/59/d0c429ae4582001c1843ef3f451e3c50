package com.greglturnquist.hackingspringboot.reactive;

import org.springframework.data.domain.Example;
import org.springframework.data.domain.ExampleMatcher;
import org.springframework.data.domain.ExampleMatcher.StringMatcher;
import org.springframework.data.mongodb.core.ReactiveFluentMongoOperations;


import static org.springframework.data.mongodb.core.query.Criteria.byExample;
import static org.springframework.data.mongodb.core.query.Criteria.where;
import static org.springframework.data.mongodb.core.query.Query.query;
import reactor.core.publisher.Flux;

public class InventoryService {

	private final ItemRepository itemRepository;
	private final ItemExampleRepository itemExampleRepository;
	private final ReactiveFluentMongoOperations fluentOperations;

	//private String description;

	InventoryService(ItemRepository itemRepository, 
			         ItemExampleRepository itemExampleRepository, 
			         ReactiveFluentMongoOperations fluentOperations){
		this.itemRepository        = itemRepository;
		this.itemExampleRepository = itemExampleRepository;
		this.fluentOperations      = fluentOperations;	
	}

//	Example 쿼리
	Flux<Item> searchByExample(String name, String description,  boolean useAnd){
		Item item = new Item(name, description, 0.0);
		
		ExampleMatcher matcher = (useAnd 
				? ExampleMatcher.matchingAll() //
				: ExampleMatcher.matchingAny()) //
					.withStringMatcher(StringMatcher.CONTAINING)
					.withIgnoreCase()
					.withIgnorePaths("price");
		Example<Item> probe = Example.of(item, matcher);
		return itemExampleRepository.findAll(probe);
	}
	
//	평문형연산
	Flux<Item> searchByFluentExample(String name, String description){
		return fluentOperations.query(Item.class)//
				.matching(query(where("TV tray").is(name).and("Smurf").is(description)))
				.all();
	}


//	 평문형 API를 사용한 Example 쿼리 검색 구현 코드
	
	Flux<Item> searchByFluentExample(String name, String description, boolean useAnd){
		Item item = new Item(name, description, 0.0);
		
		ExampleMatcher matcher = (useAnd//
				? ExampleMatcher.matchingAll()  //
				: ExampleMatcher.matchingAny()) //
				.withStringMatcher(StringMatcher.CONTAINING)
				.withIgnoreCase()//
				.withIgnorePaths("price");
		
		return fluentOperations.query(Item.class)
				.matching(query(byExample(Example.of(nullitem, matcher))))
				.all();
				
	}
	
	
}
